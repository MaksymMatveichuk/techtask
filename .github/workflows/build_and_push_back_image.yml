name: 'Build and push back image'

env:
  AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
  AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
  AWS_REGION: "${{ secrets.AWS_REGION }}"
  ECR_REPOSITORY: techtask-backend
  IMAGE_TAG: ${{ github.sha }}


on:
  workflow_dispatch:
  workflow_run:
    workflows: [ "Terraform_deploy" ]
    types:
      - completed

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push:
    name: 'Build and Push'
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: run tests
        run: mvn test

      - name: run build
        run: mvn package -DskipTests

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: List all files and directories recursively
        run: |
          echo "Current directory: $(pwd)"
          echo "All files and directories:"
          ls -R
      - name: List all files
        run: |
          echo "Repository root directory: /home/runner/work/techtask/techtask"
          echo "All files and directories in repository root:"
          ls -R /home/runner/work/techtask/techtask   

      - name: Build image
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          # Build a docker container 
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .

      - name: Push image to Amazon ECR
        id: push-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          # Push image to ECR.
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT